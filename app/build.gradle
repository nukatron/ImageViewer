apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def Properties properties = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    properties.load(new FileInputStream(project.rootProject.file('local.properties')))
} else {
    throw new GradleException("Could not read local.properties")
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.nutron.imageviewer"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //declare variable
        buildConfigField "String", "ACCESS_KEY", properties.getProperty("access_key")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //support lib
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$coreKktxVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    //Rx stuff
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"


    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // test
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-all:$mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

}
